{
  "hash": "4fd8a40225c94e8fb8ee475b0d4d00c4",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: \"Credit\"\nformat:\n  html:\n    code-fold: true\njupyter: python3\n---\n\n::: {#e4bdb0e5 .cell execution_count=1}\n``` {.python .cell-code}\nimport pandas as pd\nimport os\nos.getcwd()\ndata_info = pd.read_csv(\n    'c:\\\\Users\\\\HoraceTsai\\\\Documents\\\\Jupyter\\\\TensorFlow_FILES\\DATA\\\\lending_club_info.csv',\n    index_col='LoanStatNew'\n    )\n```\n:::\n\n\n::: {#14a6ab99 .cell execution_count=2}\n``` {.python .cell-code}\nprint(data_info.loc['revol_util']['Description'])\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRevolving line utilization rate, or the amount of credit the borrower is using relative to all available revolving credit.\n```\n:::\n:::\n\n\n::: {#1dc939b8 .cell execution_count=3}\n``` {.python .cell-code}\ndef feat_info(col_name):\n    print(data_info.loc[col_name]['Description'])\n```\n:::\n\n\n::: {#8504a2b6 .cell execution_count=4}\n``` {.python .cell-code}\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n# might be needed depending on your version of Jupyter\n%matplotlib inline\n```\n:::\n\n\n::: {#5eadf8a2 .cell execution_count=5}\n``` {.python .cell-code}\ndf = pd.read_csv('c:\\\\Users\\\\HoraceTsai\\\\Documents\\\\Jupyter\\\\TensorFlow_FILES\\DATA\\\\lending_club_loan_two.csv')\n```\n:::\n\n\n::: {#1064a0b2 .cell execution_count=6}\n``` {.python .cell-code}\ndf.info()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n<class 'pandas.core.frame.DataFrame'>\nRangeIndex: 396030 entries, 0 to 396029\nData columns (total 27 columns):\n #   Column                Non-Null Count   Dtype  \n---  ------                --------------   -----  \n 0   loan_amnt             396030 non-null  float64\n 1   term                  396030 non-null  object \n 2   int_rate              396030 non-null  float64\n 3   installment           396030 non-null  float64\n 4   grade                 396030 non-null  object \n 5   sub_grade             396030 non-null  object \n 6   emp_title             373103 non-null  object \n 7   emp_length            377729 non-null  object \n 8   home_ownership        396030 non-null  object \n 9   annual_inc            396030 non-null  float64\n 10  verification_status   396030 non-null  object \n 11  issue_d               396030 non-null  object \n 12  loan_status           396030 non-null  object \n 13  purpose               396030 non-null  object \n 14  title                 394274 non-null  object \n 15  dti                   396030 non-null  float64\n 16  earliest_cr_line      396030 non-null  object \n 17  open_acc              396030 non-null  float64\n 18  pub_rec               396030 non-null  float64\n 19  revol_bal             396030 non-null  float64\n 20  revol_util            395754 non-null  float64\n 21  total_acc             396030 non-null  float64\n 22  initial_list_status   396030 non-null  object \n 23  application_type      396030 non-null  object \n 24  mort_acc              358235 non-null  float64\n 25  pub_rec_bankruptcies  395495 non-null  float64\n 26  address               396030 non-null  object \ndtypes: float64(12), object(15)\nmemory usage: 81.6+ MB\n```\n:::\n:::\n\n\n### Exploratory Data Analysis (EDA)\n\n::: {#0ec5a3c0 .cell execution_count=7}\n``` {.python .cell-code}\nsns.countplot(\n    x= \"loan_status\",\n    data= df)\n#inbalanced outcomes\n```\n\n::: {.cell-output .cell-output-display}\n![](Credit_files/figure-html/cell-8-output-1.png){width=619 height=429}\n:::\n:::\n\n\n",
    "supporting": [
      "Credit_files"
    ],
    "filters": [],
    "includes": {}
  }
}